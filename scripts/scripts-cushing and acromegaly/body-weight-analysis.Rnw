\documentclass{article}

\usepackage{fullpage}
\usepackage[colorlinks=true]{hyperref}
\usepackage[tableposition=top]{caption}
\usepackage[utf8]{inputenc}

\begin{document}
\SweaveOpts{concordance=FALSE}

\title{Weight Analysis of Dexamethasone Treated C57BL/6J Mice}
\author{Innocence Harvey and Dave Bridges}
\date{\today}
\maketitle

\section*{Data Entry}
This was from combined weights over several measurements of C57BL/6J Mice on treated with dexamethasone.  Some animals may appear multiple times in this analysis.  Data is downloaded in csv format from the mousedb website.  This includes only fed weights.  These mice were treated with 10 mg/kg/day starting at 70 days of age.

<<data-entry, echo=FALSE>>=
raw_data_file <- "Raw Data.csv"
update.data <- function(x){
#find out which  mice are on dex (all mice ever)
library(rjson)
library(RCurl)
dex.url <- 'http://bridgeslab.uthsc.edu/mousedb/api/v1/treatment/?format=json&username=davebridges&api_key=fce3fde2a9a2e5dc9e04c20aad90120a621c50b3&limit=0&treatment=Dexamethasone%20Treated'
dex.json <- fromJSON(getURL(dex.url))
dex.mouseids <- as.integer(unlist(dex.json[[2]][[1]]['animals'])[names(unlist(dex.json[[2]][[1]]['animals'])) == 'animals.id'])

#get dex mice
all.url.dex <- paste('http://bridgeslab.uthsc.edu/mousedb/api/v1/data/?format=json&username=davebridges&api_key=fce3fde2a9a2e5dc9e04c20aad90120a621c50b3&limit=1000&animal__strain__Strain__icontains=C57&animal__MouseID__isnull=False&animal__id__in=',paste(dex.mouseids, collapse=","), sep="")

#get all BL6/J mice
all.url.first <- 'http://bridgeslab.uthsc.edu/mousedb/api/v1/data/?format=json&username=davebridges&api_key=fce3fde2a9a2e5dc9e04c20aad90120a621c50b3&limit=1000&animal__strain__Strain__icontains=C57&animal__MouseID__isnull=False'
all.url.second <- 'http://bridgeslab.uthsc.edu/mousedb/api/v1/data/?format=json&username=davebridges&api_key=fce3fde2a9a2e5dc9e04c20aad90120a621c50b3&offset=1000&limit=1000&animal__strain__Strain__icontains=C57&animal__MouseID__isnull=False'
all.url.third <- 'http://bridgeslab.uthsc.edu/mousedb/api/v1/data/?format=json&username=davebridges&api_key=fce3fde2a9a2e5dc9e04c20aad90120a621c50b3&offset=2000&limit=1000&animal__strain__Strain__icontains=C57&animal__MouseID__isnull=False'
all.url.fourth <- 'http://bridgeslab.uthsc.edu/mousedb/api/v1/data/?format=json&username=davebridges&api_key=fce3fde2a9a2e5dc9e04c20aad90120a621c50b3&offset=3000&limit=1000&animal__strain__Strain__icontains=C57&animal__MouseID__isnull=False'
all.url.fifth <- 'http://bridgeslab.uthsc.edu/mousedb/api/v1/data/?format=json&username=davebridges&api_key=fce3fde2a9a2e5dc9e04c20aad90120a621c50b3&offset=4000&limit=1000&animal__strain__Strain__icontains=C57&animal__MouseID__isnull=False'
all.url.6th <- 'http://bridgeslab.uthsc.edu/mousedb/api/v1/data/?format=json&username=davebridges&api_key=fce3fde2a9a2e5dc9e04c20aad90120a621c50b3&offset=5000&limit=1000&animal__strain__Strain__icontains=C57&animal__MouseID__isnull=False'
all.url.7th <- 'http://bridgeslab.uthsc.edu/mousedb/api/v1/data/?format=json&username=davebridges&api_key=fce3fde2a9a2e5dc9e04c20aad90120a621c50b3&offset=6000&limit=1000&animal__strain__Strain__icontains=C57&animal__MouseID__isnull=False'
all.url.8th <- 'http://bridgeslab.uthsc.edu/mousedb/api/v1/data/?format=json&username=davebridges&api_key=fce3fde2a9a2e5dc9e04c20aad90120a621c50b3&offset=7000&limit=1000&animal__strain__Strain__icontains=C57&animal__MouseID__isnull=False'
all.url.9th <- 'http://bridgeslab.uthsc.edu/mousedb/api/v1/data/?format=json&username=davebridges&api_key=fce3fde2a9a2e5dc9e04c20aad90120a621c50b3&offset=8000&limit=1000&animal__strain__Strain__icontains=C57&animal__MouseID__isnull=False'
all.url.10th <- 'http://bridgeslab.uthsc.edu/mousedb/api/v1/data/?format=json&username=davebridges&api_key=fce3fde2a9a2e5dc9e04c20aad90120a621c50b3&offset=9000&limit=1000&animal__strain__Strain__icontains=C57&animal__MouseID__isnull=False'
all.json.first <- fromJSON(getURL(all.url.first))
all.json.second <- fromJSON(getURL(all.url.second))
all.json.third <- fromJSON(getURL(all.url.third))
all.json.fourth <- fromJSON(getURL(all.url.fourth))
all.json.fifth <- fromJSON(getURL(all.url.fifth))
all.json.6th <- fromJSON(getURL(all.url.6th))
all.json.7th <- fromJSON(getURL(all.url.7th))
all.json.8th <- fromJSON(getURL(all.url.8th))
all.json.9th <- fromJSON(getURL(all.url.9th))
all.json.10th <- fromJSON(getURL(all.url.10th))
library (plyr)
data.first <- ldply(lapply(all.json.first[[2]],function(x) do.call(c,unlist(x,r=F))),as.data.frame)
data.second <- ldply(lapply(all.json.second[[2]],function(x) do.call(c,unlist(x,r=F))),as.data.frame)
data.third <- ldply(lapply(all.json.third[[2]],function(x) do.call(c,unlist(x,r=F))),as.data.frame)
data.fourth <- ldply(lapply(all.json.fourth[[2]],function(x) do.call(c,unlist(x,r=F))),as.data.frame)
data.fifth <- ldply(lapply(all.json.fifth[[2]],function(x) do.call(c,unlist(x,r=F))),as.data.frame)
data.6th <- ldply(lapply(all.json.6th[[2]],function(x) do.call(c,unlist(x,r=F))),as.data.frame)
data.7th <- ldply(lapply(all.json.7th[[2]],function(x) do.call(c,unlist(x,r=F))),as.data.frame)
data.8th <- ldply(lapply(all.json.8th[[2]],function(x) do.call(c,unlist(x,r=F))),as.data.frame)
data.9th <- ldply(lapply(all.json.9th[[2]],function(x) do.call(c,unlist(x,r=F))),as.data.frame)
data.10th <- ldply(lapply(all.json.10th[[2]],function(x) do.call(c,unlist(x,r=F))),as.data.frame)




useful_fields <- c('animal.id','animal.MouseID','age','values','assay.assay')
data <- rbind(data.first[,useful_fields], 
              data.second[,useful_fields], 
              data.third[,useful_fields], 
              data.fourth[,useful_fields],
              data.fifth[,useful_fields],
              data.6th[,useful_fields],
              data.7th[,useful_fields],
              data.8th[,useful_fields],
              data.9th[,useful_fields]
              )

#this is the controls and the dex treated
cohort.a.ids <- c(seq(6642, 6666),7003,7004,7005,7006,6994,6995,6996, 6997)
data.dex <- subset(data, animal.id %in% cohort.a.ids)

data.dex$Dexamethasone <-  data.dex$animal.id %in% dex.mouseids

for (row in rownames(data.dex)){
  if (data.dex[row,'Dexamethasone']==TRUE) {
      data.dex[row,'Treatment'] <- 'Dexamethasone'}
  else data.dex[row,'Treatment'] <- 'Water'
}

data.dex$Treatment <- as.factor(data.dex$Treatment)

write.csv(data.dex, raw_data_file)
}
#uncomment to update
update.data()
data.dex <- read.csv(raw_data_file, row.names='X')
data.dex$Treatment <- relevel(data.dex$Treatment, ref='Water')
data.dex$age.from.start <- data.dex$age - 70
@

Data was downloaded from MouseDB then aand the data is saved as \verb+\Sexpr{raw_data_file}+.  These data are located in \verb+\Sexpr{getwd()}+ and was most recently updated on \Sexpr{date()}.

\section*{Body Weights}

\begin{figure}
\begin{center}
<<label=weights-scatterplot,fig=TRUE,echo=FALSE>>=
weight.data <- subset(data.dex, assay.assay=="Body Weight")
weight.data$Weight <- as.numeric(as.character(weight.data$values))/1000 #in g

with(weight.data, plot(age, Weight,
                       col=Treatment,
                       ylab="Body Weight (g)",
                       xlab='Age (days)',
                        las=1, pch=19))

se <- function(x) sd(x)/sqrt(length(x))
library(dplyr)
weight.dt <- tbl_dt(weight.data)
weight.summary <- weight.dt %.%
    group_by(age, Treatment) %.%
    summarize(
      average=mean(Weight), 
      sd=sd(Weight), 
      se=se(Weight), 
      n=length(Weight))

with(subset(weight.summary, Treatment=='Water'), lines(age, average, col=palette()[1]))
with(subset(weight.summary, Treatment=='Dexamethasone'), lines(age, average, col=palette()[2]))
@
\end{center}
\caption{Ob/Ob Mouse Weights with Age}
\label{fig:weights-scatterplot}
\end{figure}

\begin{figure}
\begin{center}
<<label=lean-mass-scatterplot,fig=TRUE,echo=FALSE>>=
lean.mass.data <- subset(data.dex, assay.assay=="Lean Mass")
lean.mass.data$Weight <- as.numeric(as.character(lean.mass.data$values))/1000 #in g

with(lean.mass.data, plot(age, Weight,
                       col=Treatment,
                      ylab="Lean Mass (g)",
                       xlab='Age (days)',
                        las=1, pch=19))

lean.mass.dt <- tbl_dt(lean.mass.data)
lean.mass.summary <- lean.mass.dt %.%
    group_by(age, Treatment) %.%
    summarize(
      average=mean(Weight), 
      sd=sd(Weight), 
      se=se(Weight), 
      n=length(Weight))

with(subset(lean.mass.summary, Treatment=='Water'), lines(age, average, col=palette()[1]))
with(subset(lean.mass.summary, Treatment=='Dexamethasone'), lines(age, average, col=palette()[2]))
@
\end{center}
\caption{Lean Mass with Age}
\label{fig:lean-mass-scatterplot}
\end{figure}

\section*{Fat Mass}

\begin{figure}
\begin{center}
<<label=fat-mass-scatterplot,fig=TRUE,echo=FALSE>>=
fat.mass.data <- subset(data.dex, assay.assay=="Total Fat Mass")
fat.mass.data$Weight <- as.numeric(as.character(fat.mass.data$values))/1000 #in g

with(fat.mass.data, plot(age, Weight,
                       col=Treatment,
                       ylab="Fat Mass (g)",
                       xlab='Age (days)',
                        las=1, pch=19))

fat.mass.dt <- tbl_dt(fat.mass.data)
fat.mass.summary <- fat.mass.dt %.%
    group_by(age, Treatment) %.%
    summarize(
      average=mean(Weight), 
      sd=sd(Weight), 
      se=se(Weight), 
      n=length(Weight))

with(subset(fat.mass.summary, Treatment=='Water'), lines(age, average, col=palette()[1]))
with(subset(fat.mass.summary, Treatment=='Dexamethasone'), lines(age, average, col=palette()[2]))
@
\end{center}
\caption{Fat Mass with Age}
\label{fig:fat-mass-scatterplot}
\end{figure}


\begin{figure}
\begin{center}
<<label=pct-fat-mass-scatterplot,fig=TRUE,echo=FALSE>>=
pct.fat.mass.data <- merge(
  weight.data[,c('animal.MouseID','Weight','age','age.from.start','Treatment')], 
  fat.mass.data[,c('animal.MouseID','Weight','age','age.from.start','Treatment')],
  by=c('age','age.from.start','animal.MouseID','Treatment'))
pct.fat.mass.data$Pct.Fat.Mass <- pct.fat.mass.data$Weight.y/pct.fat.mass.data$Weight.x*100

with(pct.fat.mass.data, plot(age, Pct.Fat.Mass,
                       col=Treatment,
                       ylab="Percent Fat Mass",
                       xlab='Age (days)',
                        las=1, pch=19))

pct.fat.mass.dt <- tbl_dt(pct.fat.mass.data)
pct.fat.mass.summary <- pct.fat.mass.dt %.%
    group_by(age, Treatment) %.%
    summarize(
      average=mean(Pct.Fat.Mass), 
      sd=sd(Pct.Fat.Mass), 
      se=se(Pct.Fat.Mass), 
      n=length(Pct.Fat.Mass))

with(subset(pct.fat.mass.summary, Treatment=='Water'), lines(age, average, col=palette()[1]))
with(subset(pct.fat.mass.summary, Treatment=='Dexamethasone'), lines(age, average, col=palette()[2]))
@
\end{center}
\caption{Lean Mass with Age}
\label{fig:pct-fat-mass-scatterplot}
\end{figure}

\begin{figure}
\begin{center}
<<label=pct-fat-mass-scatterplot-smooth,fig=TRUE,echo=FALSE>>=
with(pct.fat.mass.data, plot(age.from.start, Pct.Fat.Mass,
                       col=Treatment,
                       ylab="Percent Fat Mass",
                       xlab='Dexamethasone Treatment (days)',
                       xlim=c(0,max(age)-70),
                        las=1, pch=19))

#repeated measures model
library(lme4)
fat.mass.lme <- lmer(Pct.Fat.Mass ~ age.from.start + age.from.start:Treatment + (1|animal.MouseID), data=subset(pct.fat.mass.data, age>69))
fat.mass.lme.null <- lmer(Pct.Fat.Mass ~ age.from.start + (1|animal.MouseID), data=subset(pct.fat.mass.data, age>69))

abline(a=fixef(fat.mass.lme)['(Intercept)'], b=fixef(fat.mass.lme)['age.from.start'], col=palette()[1])
abline(a=fixef(fat.mass.lme)['(Intercept)'], b=fixef(fat.mass.lme)['age.from.start']+fixef(fat.mass.lme)['age.from.start:TreatmentDexamethasone'], col=palette()[2])

legend('topleft', levels(data.dex$Treatment), col=palette()[1:2], bty='n', pch=19, lty=1)
@
\end{center}
\caption{Percent Mass with Age, Starting at Beginning of Treatment}
\label{fig:pct-fat-mass-scatterplot-smooth}
\end{figure}

Based on a linear mixed effects model, the p-value for an effect of Dexamethasone on the rate of change in percent fat mass was \Sexpr{round(anova(fat.mass.lme, fat.mass.lme.null)$`Pr(>Chisq)`[2],10)} (${\chi^2}$=\Sexpr{round(anova(fat.mass.lme, fat.mass.lme.null)$`Chisq`[2],2)}) with an increase of \Sexpr{round(fixef(fat.mass.lme)['age.from.start:TreatmentDexamethasone']*7,3)}\% per week.  To test for normality in this model we did a Shapiro-Wilk test and found that the did meet this assumption \Sexpr{round(shapiro.test(residuals(fat.mass.lme))$p.value,5)}.

\section*{Session Information}
<<sessionInfo, results=tex, echo=F>>=
toLatex(sessionInfo())
@


\end{document}